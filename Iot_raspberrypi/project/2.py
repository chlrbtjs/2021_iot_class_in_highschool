# OLED 조정 라이브러리
import board
import digitalio
from PIL import Image, ImageDraw, ImageFont
from board import SCL, SDA
import adafruit_ssd1306

import time

OLED_DISPLAY = 0x3c

RESET_PIN = digitalio.DigitalInOut(board.D4)

i2c = board.I2C()

oled = adafruit_ssd1306.SSD1306_I2C(128, 64, i2c, addr=OLED_DISPLAY, reset=RESET_PIN)

font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 28)

def clear():
    oled.fill(0)
    oled.show()

clear()

LOGO = [
    (3, [7, 8]),
    (4, [6, 7, 8, 9]),
    (5, [6, 7, 8, 9]),
    (6, [7, 8]),
    (8, [5, 6, 7, 8, 9]),
    (9, [4, 5, 6, 7, 8, 9, 10]),
    (10, [4, 5, 8, 9, 10]),
    (11, [5, 8, 9, 10]),
    (12, [7, 8, 9, 29, 30, 31, 32]),
    (13, [7, 8, 17, 18, 23, 24, 28, 29, 30, 31, 32, 33]),
    (14, [6, 7, 16, 17, 18, 19, 22, 23, 24, 25, 28, 33, 34, 41, 42, 46, 47, 48, 49]),
    (15, [6, 7, 15, 16, 17, 19, 20, 21, 22, 25, 26, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 50]),
    (16, [5, 6, 7, 15, 16, 19, 20, 21, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 45, 50]),
    (17, [5, 6, 15, 16, 20, 21, 25, 26, 28, 29, 30, 33, 34, 36, 42, 45, 47, 48, 49, 52, 53]),
    (18, [5, 6, 7, 10, 11, 12, 15, 16, 20, 21, 25, 26, 28, 29, 33, 34, 36, 37, 41, 42, 45, 46, 51, 52, 53]),
    (19, [5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 20, 21, 25, 26, 28, 29, 33, 34, 37, 38, 39, 40, 41, 45, 46, 47, 50, 51, 52]),
    (20, [7, 8, 9, 10, 11, 15, 20, 21, 25, 29, 30, 31, 32, 33, 35, 38, 39, 46, 47, 48, 49, 50, 51]),
    (21, [38, 39, 40, 41]),
    (22, [36, 37, 38, 40, 41]),
    (23, [35, 41, 42]),
    (24, [35, 36, 41, 42]),
    (25, [36, 37, 38, 39, 40, 41]),
    (26, [37, 38, 39, 40]),
    (32, [8, 9, 10, 11, 12, 13]),
    (33, [6, 7, 8, 9, 10, 11, 12, 13, 14, 15]),
    (34, [5, 6, 7, 13, 14, 15, 16]),
    (35, [4, 5, 6, 15, 16, 17]),
    (36, [4, 5, 16, 17]),
    (37, [3, 4, 5, 16, 17]),
    (38, [3, 4, 15, 16, 17]),
    (39, [3, 4, 13, 14, 15, 16]),
    (40, [3, 4, 9, 10, 11, 12, 13, 14, 41]),
    (41, [3, 4, 5, 9, 10, 11, 12, 23, 32, 33, 34, 41]),
    (42, [3, 4, 5, 22, 23, 24, 27, 28, 32, 33, 34, 41]),
    (43, [4, 5, 6, 21, 22, 23, 24, 27, 28, 32, 33, 34, 40, 41]),
    (44, [4, 6, 7, 20, 21, 22, 23, 27, 28, 40, 41, 48, 49, 55, 59, 60, 61]),
    (45, [5, 6, 7, 8, 9, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 34, 39, 40, 41, 47, 48, 49, 50, 51, 54, 56, 58, 59, 60, 61, 62]),
    (46, [6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 27, 28, 30, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 52, 54, 56, 57, 58, 59, 62]),
    (47, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 27, 28, 33, 34, 35, 40, 41, 46, 47, 52, 53, 57, 58]),
    (48, [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 32, 33, 34, 40, 41, 46, 47, 53, 57, 58]),
    (49, [13, 14, 15, 16, 17, 22, 23, 24, 25, 27, 28, 32, 33, 40, 41, 46, 53, 57, 58]),
    (50, [21, 22, 25, 26, 27, 28, 31, 32, 33, 39, 40, 46, 52, 53, 56, 57]),
    (51, [20, 21, 26, 27, 28, 31, 32, 39, 40, 46, 47, 52, 53, 56, 57]),
    (52, [19, 20, 26, 27, 28, 30, 31, 32, 39, 40, 45, 46, 47, 51, 52, 53, 56, 57]),
    (53, [19, 20, 26, 27, 28, 30, 31, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 56]),
    (54, [19, 20, 25, 26, 27, 28, 30, 31, 35, 36, 39, 40, 41, 44, 45, 46, 49, 50, 51, 55]),
    (55, [19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 34, 35, 36, 40, 41, 42, 43, 44, 45, 71, 74, 86, 87, 88, 101, 120]),
    (56, [20, 21, 22, 23, 24, 27, 28, 31, 32, 33, 34, 35, 41, 42, 43, 44, 71, 74, 85, 101, 120]),
    (57, [32, 33, 34, 71, 74, 85, 101, 116, 117, 119]),
    (58, [71, 72, 73, 74, 86, 87, 101, 115, 118, 119]),
    (59, [71, 74, 88, 101, 115, 118]),
    (60, [71, 74, 88, 101, 116, 117, 119]),
    (61, [71, 74, 85, 86, 87, 101, 102, 103, 104, 120, 121])
]

brush_type_free = [
    (8, [76, 77]),
    (9, [74, 75, 76, 77]),
    (10, [73, 74, 77, 89, 90, 91, 92, 93]),
    (11, [72, 73, 77, 86, 87, 88, 89, 93]),
    (12, [76, 86, 93]),
    (13, [76, 84, 85, 93]),
    (14, [75, 83, 84, 93]),
    (15, [74, 75, 82, 83, 93, 109, 110, 111, 112]),
    (16, [74, 79, 80, 81, 92, 107, 108, 113]),
    (17, [73, 78, 79, 91, 106, 107, 113]),
    (18, [73, 76, 77, 78, 91, 105, 106, 113]),
    (19, [73, 74, 75, 76, 90, 105, 113]),
    (20, [90, 104, 113]),
    (21, [90, 103, 113]),
    (22, [89, 90, 101, 102, 113, 114]),
    (23, [89, 100, 101, 114]),
    (24, [89, 99, 114, 115]),
    (25, [89, 96, 97, 98, 116]),
    (26, [89, 90, 91, 92, 93, 94, 95, 96])
]

# oled.line(1, 1, 32, 32, color=(255, 255, 255))
# oled.fill_rect(1, 40, 32, 32, color=(255, 255, 255))
# oled.fill_circle(32, 32, 10, color=(255, 255, 255))
color=(255, 255, 255)

oled.rect(1, 1, 128, 64, color=color)
oled.line(64, 1, 64, 64, color=color)
oled.line(64, 37, 128, 37, color=color)

for y, x in LOGO:
    for i in x:
        oled.pixel(i+1, y, color=color)

hue = 180
saturation = 50
lightness = 50
alpha = 0.5

brush_type = 1


def graph():
    global hue, saturation, lightness, alpha, brush_type

    for x in range(65, 127):
        for y in range(2, 36):
            oled.pixel(x, y, 0)

    for x in range(65, 127):
        for y in range(38, 54):
            oled.pixel(x, y, 0)

    for i in range(0, int(15*(hue/360))):
        oled.pixel(72, 53-i, color=color)
        oled.pixel(73, 53-i, color=color)

    for i in range(0, int(15*(saturation/100))):
        oled.pixel(86, 53-i, color=color)
        oled.pixel(87, 53-i, color=color)

    for i in range(0, int(15*(lightness/100))):
        oled.pixel(102, 53-i, color=color)
        oled.pixel(103, 53-i, color=color)

    for i in range(0, int(15*(alpha))):
        oled.pixel(117, 53-i, color=color)
        oled.pixel(118, 53-i, color=color)

    oled.show()

    if brush_type == 0:
        for y, x in brush_type_free:
            for i in x:
                oled.pixel(i+1, y, color=color)
    elif brush_type == 1:
        oled.line(70, 32, 121, 7, color=color)
    elif brush_type == 2:
        oled.rect(70, 7, 52, 25, color=color)
    elif brush_type == 3:
        oled.fill_rect(70, 7, 52, 25, color=color)
    elif brush_type == 4:
        oled.circle(96, 19, 10, color=color)
    elif brush_type == 5:
        for r in range(1, 10):
            oled.circle(96, 19, r, color=color)
    elif brush_type == 6:
        for x in range(67, 125):
            for y in range(3, 35):
                oled.pixel(x, y, color=(255, 255, 255))

        for r in range(1, 10):
            oled.circle(96, 19, r, color=0)
    
    elif brush_type == 7:
        for x in range(67, 125):
            for y in range(3, 35):
                oled.pixel(x, y, color=(255, 255, 255))

        oled.fill_rect(71, 7, 50, 25, color=0)

    oled.show()


for i in range(0, 8):
    hue = 360 - (36 * i)
    saturation = 100 - (10 * i)
    lightness = 100 - (10 * i)
    alpha = (1 - float(i)/10)

    brush_type = i

    graph()

    oled.show()

    time.sleep(1)


clear()